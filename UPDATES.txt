2023-06-06

Дополнения к проекту РПО

Лабораторная работа 4

1. При создании проекта следует указывать последнюю стабильную версию SpringBoot (3.x)

 
Лабораторная работа 5

1.	В раздел dependencies файла pom.xml следует добавить две зависимости.

<dependency>
   <groupId>org.springframework.boot</groupId>
   <artifactId>spring-boot-starter-data-jpa</artifactId>
</dependency>
<dependency>
   <groupId>com.mysql</groupId>
   <artifactId>mysql-connector-j</artifactId>
   <scope>runtime</scope>
</dependency>

Вторая зависимость — это драйвер MySQL. Без него проект собирается, но при запуске возникает ошибка подключения к БД.
После редактирования следует выполнить синхронизацию настроек Maven. 
 
2.	В классах моделей (Country и пр.) заменить  import javaх.persistence.*; на import jakarta.persistence.*;

3.	В таблице users и модели User удалить поля token, salt, activity

Лабораторная работа 6

1.	Пункт 2 ЛР5

2.	Добавить зависимость
<dependency>
   <groupId>org.springframework.boot</groupId>
   <artifactId>spring-boot-starter-validation</artifactId>
</dependency>

Лабораторная работа 7

1.	Переделать авторизацию примерно по схеме описанной здесь:
 https://www.javaguides.net/2023/05/spring-boot-spring-security-jwt-mysql.html

1.1.	Добавить зависимости
<dependency>
   <groupId>io.jsonwebtoken</groupId>
   <artifactId>jjwt-api</artifactId>
   <version>0.11.5</version>
</dependency>
<dependency>
   <groupId>io.jsonwebtoken</groupId>
   <artifactId>jjwt-impl</artifactId>
   <version>0.11.5</version>
   <scope>runtime</scope>
</dependency>
<dependency>
   <groupId>io.jsonwebtoken</groupId>
   <artifactId>jjwt-jackson</artifactId>
   <version>0.11.5</version>
   <scope>runtime</scope>
</dependency>

1.2.	В файл application.properties добавить настройки
app.jwt-secret=2vZuAVk/YaFbhXz0M6rgOgBYErMSNOFJA2vMje51Xbs=
app-jwt-expiration-milliseconds=604800000

1.3.	Токен теперь не храниться в базе данных поэтому не требуется делать обработчик logout. Достаточно удалить токен на клиенте.

1.4 В основном все изменения в папке auth

Лабораторная работа 8

1.	export default App; в App.js

2.	удалить import {createBrowserHistory} from "history"; в App.js


Лабораторная работа 9

1.	Переименовать в описании App.cs -> App.css

2.	В описании в тексте Login.jsx отсутствует закрывающая фигурная скобка.

3.	Страницу login следует добавить, так же, как ранее страницу home, в список маршрутов в App.js

4.	Убрать функцию BackendService.logout(), так как токен больше не хранится на сервере.

Лабораторная работа 10

1.	Исправить в описании npm -i redux -> npm i redux и т.п.

2.	В файле index.js:

import { store } from './utils/Rdx';
import { Provider } from 'react-redux';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
      <Provider store={store}>
            <App />
      </Provider>
  </React.StrictMode>
);

3.	Удалить alert из этого вызова в начальном примере. Иначе react не запускается из за отсутствия инициализации alert.

const rootReducer = combineReducers({
    authentication, alert
});

4.	В функцию компонента Login добавить строчку

const dispatch = useDispatch();

Лабораторная работа 11

1.	Лишние символы в тексте getCountry

2.	updateCountry пропущена скобка 

3.	В настройках security надо отключить авторизацию запросов OPTIONS

4.	Добавлена реализация CountryComponent.jsx и ArtistComponent.jsx В последнем файле имеется пример работы с выпадающим списком.

Лабораторная работа 12

1.	Логика обработчика updateUser изменена для использования шифрования пароля BCrypt.
